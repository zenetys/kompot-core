# Generic service definition template - This is NOT a real service, just a template!

define service {
        name                            generic-service         ; The 'name' of this service template
        active_checks_enabled           1                       ; Active service checks are enabled
        passive_checks_enabled          1                       ; Passive service checks are enabled/accepted
        parallelize_check               1                       ; Active service checks should be parallelized
        obsess_over_service             1                       ; We should obsess over this service (if necessary)
        check_freshness                 0                       ; Default is to NOT check service 'freshness'
        notifications_enabled           1                       ; Service notifications are enabled
        event_handler_enabled           1                       ; Service event handler is enabled
        flap_detection_enabled          1                       ; Flap detection is enabled
        process_perf_data               1                       ; Process performance data
        retain_status_information       1                       ; Retain status information across program restarts
        retain_nonstatus_information    1                       ; Retain non-status information across program restarts
        is_volatile                     0                       ; The service is not volatile
        check_period                    24x7                    ; The service can be checked at any time of the day
        max_check_attempts              5                       ; Re-check the service up to 3 times in order to determine its final (hard) state
        check_interval                  5                       ; Check the service every 10 minutes under normal conditions
        retry_interval                  1                       ; Re-check the service every two minutes until a hard state can be determined
#        contacts   	                autotrack               ; Use autotrack notification command to update IHM
        notification_options            w,u,c,r,f,s             ; Send notifications about warning, unknown, critical, recovery, flapping, downtime events
        notification_interval           0                       ; Never re-notify
        notification_period             24x7                    ; Notifications can be sent out at any time
        first_notification_delay        1
        register                        0                       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
	check_command			return-unknown		; default check_command if not defined on service
        __DEBUG
        __TRACK
        __AUTOTRACK
}

define service {
        name                            passive-service
	use				generic-service
        active_checks_enabled           0
        passive_checks_enabled          1
	max_check_attempts		1
        is_volatile                     1
        register                        0
	flap_detection_enabled          0
	check_command			reset_passive
	__RESET_OUTPUT			"Réinitialisé manuellement"
}

define service{
	name				local-service
	use				generic-service
        max_check_attempts              4
        check_interval           	5
        retry_interval            	1
        register                        0
}

