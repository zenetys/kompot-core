define command {
        command_name    check_http_nobody
        command_line $USER1$/check_http \
                --hostname='$HOSTADDRESS$' \
                --IP-address='$HOSTADDRESS$' \
                --port='$_SERVICE_PORT$' \
                --no-body
}

define command {
        command_name    check_https_nobody
        command_line $USER1$/check_http \
                --hostname='$HOSTADDRESS$' \
                --IP-address='$HOSTADDRESS$' \
                --port='$_SERVICE_PORT$' \
                --no-body \
                --ssl
}

define command {
        command_name        check_https_centreon
        command_line $USER2$/centreon_plugins.pl \
                --plugin=apps::protocols::http::plugin \
                --mode=connections \
                --hostname='$HOSTADDRESS$' \
                --verbose
}

define command {
        command_name    check_https_x509_error
        command_line $USER2$/centreon_plugins.pl \
                --plugin=apps::protocols::x509::plugin \
                --mode=certificate \
                --hostname='$HOSTADDRESS$' \
                --port=443 \
                --custommode=https \
                $_SERVICE_EXTRA_ARGS$
}
#                --insecure

define command {
        command_name        check_https_x509
        command_line $USER1$/check_http \
                --hostname='$HOSTADDRESS$' \
                --certificate='$_SERVICE_WARNING$,$_SERVICE_CRITICAL$'
}

define command {
        command_name check_http_response
        command_line $USER2$/centreon_plugins.pl \
                --plugin apps::protocols::http::plugin \
                --mode response \
                --timeout '$_SERVICE_TIMEOUT$' \
                --http-backend curl \
                --proxyurl '$_SERVICE_PROXY$' \
                $_SERVICE_CRED_PROXY_CENTREON$ \
                --method '$_SERVICE_METHOD$' \
                --proto '$_SERVICE_PROTO$' \
                --http-peer-addr '$_SERVICE_PEER_ADDRESS$' \
                --hostname '$_SERVICE_HOSTNAME$' \
                --urlpath '$_SERVICE_PATH$' \
                --port '$_SERVICE_PORT$' \
                --warning-status '$_SERVICE_WARNING_STATUS$' \
                --warning-size '$_SERVICE_WARNING_SIZE$' \
                --warning-time '$_SERVICE_WARNING_TIME$' \
                --critical-status '$_SERVICE_CRITICAL_STATUS$' \
                --critical-size '$_SERVICE_CRITICAL_SIZE$' \
                --critical-time '$_SERVICE_CRITICAL_TIME$' \
                --insecure '$_SERVICE_INSECURE$' \
                --no-follow '$_SERVICE_NO_FOLLOW$' \
                $_SERVICE_CRED_HTTP_CENTREON$ \
                --cert-file '$_SERVICE_CERT_FILE$' \
                --key-file '$_SERVICE_KEY_FILE$' \
                --cacert-file '$_SERVICE_CACERT_FILE$' \
                --cert-pwd '$_SERVICE_CERT_PWD$' \
                --cert-pkcs12 '$_SERVICE_CERT_PKCS12$' \
                --header 'content-type:' \
                --get-param '$_SERVICE_GET_PARAM$' \
                --post-param '$_SERVICE_POST_PARAM$' \
                --header '$_SERVICE_HEADER$' \
                --opt-exit '$_SERVICE_EXEC_FAIL_EXIT$' \
                --extra-stats '$_SERVICE_EXTRA_STATS$' \
                --verbose 1 \
                --debug 0 \
                $_SERVICE_UNSAFE_ARGS$
}

define command {
        command_name check_http_expected_content
        command_line $USER2$/centreon_plugins.pl \
                --plugin apps::protocols::http::plugin \
                --mode expected-content \
                --timeout '$_SERVICE_TIMEOUT$' \
                --http-backend curl \
                --proxyurl '$_SERVICE_PROXY$' \
                --curl-opt 'CURLOPT_PROXYAUTH => CURLAUTH_$_SERVICE_PROXY_AUTH_MODE$' \
                --curl-opt 'CURLOPT_PROXYUSERPWD => $_SERVICE_PROXY_USERNAME$:$_SERVICE_PROXY_PASSWORD$' \
                $_SERVICE_CRED_PROXY_CENTREON$ \
                --method '$_SERVICE_METHOD$' \
                --proto '$_SERVICE_PROTO$' \
                --http-peer-addr '$_SERVICE_PEER_ADDRESS$' \
                --hostname '$_SERVICE_HOSTNAME$' \
                --urlpath '$_SERVICE_PATH$' \
                --port '$_SERVICE_PORT$' \
                --warning-status '$_SERVICE_WARNING_STATUS$' \
                --warning-size '$_SERVICE_WARNING_SIZE$' \
                --warning-time '$_SERVICE_WARNING_TIME$' \
                --critical-status '$_SERVICE_CRITICAL_STATUS$' \
                --critical-size '$_SERVICE_CRITICAL_SIZE$' \
                --critical-time '$_SERVICE_CRITICAL_TIME$' \
                --extracted-pattern '$_SERVICE_EXTRACTED_PATTERN$' \
                --expected-string '$_SERVICE_EXPECTED_STRING$ \
                --warning-extracted '$_SERVICE_WARNING_EXTRACTED$' \
                --critical-extracted '$_SERVICE_CRITICAL_EXTRACTED$' \
                --unknown-content '$_SERVICE_UNKNOWN_CONTENT$' \
                --warning-content '$_SERVICE_WARNING_CONTENT$' \
                --critical-content '$_SERVICE_CRITICAL_CONTENT$' \
                --insecure '$_SERVICE_INSECURE$' \
                --no-follow '$_SERVICE_NO_FOLLOW$' \
                --curl-opt 'CURLOPT_AUTH => CURLAUTH_$_SERVICE_AUTH_MODE$' \
                --curl-opt 'CURLOPT_USERPWD => $_SERVICE_USERNAME$:$_SERVICE_PASSWORD$' \
                $_SERVICE_CRED_HTTP_CENTREON$ \
                --cert-file '$_SERVICE_CERT_FILE$' \
                --key-file '$_SERVICE_KEY_FILE$' \
                --cacert-file '$_SERVICE_CACERT_FILE$' \
                --cert-pwd '$_SERVICE_CERT_PWD$' \
                --cert-pkcs12 '$_SERVICE_CERT_PKCS12$' \
                --header 'content-type:' \
                --get-param '$_SERVICE_GET_PARAM$' \
                --post-param '$_SERVICE_POST_PARAM$' \
                --header '$_SERVICE_HEADER$' \
                --opt-exit '$_SERVICE_EXEC_FAIL_EXIT$' \
                --verbose 1 \
                --debug 0 \
                $_SERVICE_UNSAFE_ARGS$
}
